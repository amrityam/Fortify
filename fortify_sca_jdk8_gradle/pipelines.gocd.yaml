pipelines:
  build-publish-jdk8-gradle-analysis-image:
    group: gradle-build-static-code-analysis-group
    materials:
      mygit:
        branch: master
        git: https://githuben.intranet.mckinsey.com/Amrityam-Rout/Fortify_Pipeline.git
        whitelist:
          - jdk8_gradle/**/*.*
    stages:
       - publish-image:
          clean_workspace: true
          jobs:
            run:
              tasks:
                - exec:
                   command: bash
                   arguments:
                    - -c
                    - cp -r /var/lib/go-agent/pipelines/fortify-19.1.0 ./Fortify/
                - exec:
                   command: bash
                   arguments:
                    - -c
                    - docker build --no-cache --rm -t registry.mckinsey.com/fortify/jdk8_gradle --file=jdk8_gradle/Dockerfile .
                - exec:
                   command: bash
                   arguments:
                    - -c
                    - docker push registry.mckinsey.com/fortify/jdk8_gradle
                - exec:
                   command: bash
                   arguments:
                    - -c
                    - docker rmi -f registry.mckinsey.com/fortify/jdk8_gradle
#This pipeline below is to be used by any product on jdk8, Just need to change the git repo and arguments in docker run command below
#Rest everything is blackbox for the user.
  engage-risk-api-code-scanning:
    group: gradle-build-static-code-analysis-group
    materials:
      mygit:
        branch: master
        git: http://githuben.intranet.mckinsey.com/engage/risk-api.git
        destination: source_code
      dev:
        pipeline: build-publish-jdk8-gradle-analysis-image
        stage: publish-image
    stages:
      - staticCode-analysis:
          clean_workspace: true
          jobs:
            run:
              tasks:
                - exec:
                    arguments:
                      - -c
                      - docker run -u `id -u` --rm -v $PWD/source_code:/source_code -e "prod_name=engage_risk_api" -e "product_version_name=1.0" -e "sonar_fortify_ssc_appversion=engage-risk-api_test_01:1.0.0.0" -e "sonar_projectKey=engage-risk-api" -e "sonarExtParam=" registry.mckinsey.com/fortify/jdk8_gradle
                    command: bash
                - exec:
                    arguments:
                      - -c
                      - rm -rf .gradle/
                    command: bash    
